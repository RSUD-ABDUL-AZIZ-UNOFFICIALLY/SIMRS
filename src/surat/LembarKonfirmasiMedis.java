package surat;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import kepegawaian.DlgCariDokter;

/**
 *
 * @author dosen
 */
public class LembarKonfirmasiMedis extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private int i = 0;
    private DlgCariDokter dokter=new DlgCariDokter(null,false);
    private String finger="",rStatus="Ranap",caritglKonfirm="";
    

    /** Creates new form DlgPemberianInfus
     * @param parent
     * @param modal */
    public LembarKonfirmasiMedis(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tabMode=new DefaultTableModel(null,new Object[]{
            "No. Rawat","No.RM","Nama Pasien","No Kartu","No SEP","Tgl Konfirmasi","Jam","Kode Dokter","Nama Dokter","Petugas BPJS",
            "Diagnosa Utama","Alasan","Diagnosa 1","Alasan","Diagnosa 2","Alasan","Diagnosa 3","Alasan","Diagnosa 4","Alasan",
            "Prosedur Utama","Prosedur Tambahan 1","Prosedur Tambahan 2","Prosedur Tambahan 3","Status"
            }){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        tbObat.setModel(tabMode);

        tbObat.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbObat.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 24; i++) {
            TableColumn column = tbObat.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(80);
            }else if(i>=1 && i<=5){
                column.setPreferredWidth(80);
            }else{
                column.setPreferredWidth(250);
            }
        }
        tbObat.setDefaultRenderer(Object.class, new WarnaTable());

        TNoRw.setDocument(new batasInput((byte)50).getKata(TNoRw));
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));
        KdDokter.setDocument(new batasInput((byte)20).getKata(KdDokter));
        if(koneksiDB.CARICEPAT().equals("aktif")){
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
                @Override
                public void insertUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
                @Override
                public void removeUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
                @Override
                public void changedUpdate(DocumentEvent e) {
                    if(TCari.getText().length()>2){
                        tampil();
                    }
                }
            });
        } 
        
        ChkInput.setSelected(false);
        isForm();
                
        dokter.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {;}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(dokter.getTable().getSelectedRow()!= -1){                    
                    KdDokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(),0).toString());
                    NmDokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(),1).toString());
                    isNomer();
                }
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });        
    }
 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnSurat = new javax.swing.JMenuItem();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbObat = new widget.Table();
        jPanel3 = new javax.swing.JPanel();
        panelGlass8 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnBatal = new widget.Button();
        BtnHapus = new widget.Button();
        BtnEdit = new widget.Button();
        BtnPrint = new widget.Button();
        BtnAll = new widget.Button();
        BtnKeluar = new widget.Button();
        panelGlass10 = new widget.panelisi();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        RtglKonfirm = new widget.RadioButton();
        DTPCari1 = new widget.Tanggal();
        jLabel22 = new widget.Label();
        DTPCari2 = new widget.Tanggal();
        BtnCari = new widget.Button();
        jLabel7 = new widget.Label();
        LCount = new widget.Label();
        PanelInput = new javax.swing.JPanel();
        ChkInput = new widget.CekBox();
        FormInput = new widget.PanelBiasa();
        jLabel4 = new widget.Label();
        BtnCariPasien = new widget.Button();
        TNoRw = new widget.TextBox();
        jLabel9 = new widget.Label();
        NmDokter = new widget.TextBox();
        TPasien = new widget.TextBox();
        TanggalKonfirmasi = new widget.Tanggal();
        Status = new widget.ComboBox();
        jLabel10 = new widget.Label();
        KdDokter = new widget.TextBox();
        BtnDokter = new widget.Button();
        jLabel37 = new widget.Label();
        jLabel5 = new widget.Label();
        AlasanDiagnosaUtama = new widget.TextBox();
        TxProsedur2 = new widget.TextBox();
        jLabel8 = new widget.Label();
        jLabel12 = new widget.Label();
        TxProsedurUtama = new widget.TextBox();
        jLabel13 = new widget.Label();
        TxProsedur3 = new widget.TextBox();
        DiagnosaUtama = new widget.TextBox();
        jLabel16 = new widget.Label();
        jLabel17 = new widget.Label();
        TxProsedur1 = new widget.TextBox();
        TNoRM = new widget.TextBox();
        jLabel18 = new widget.Label();
        DiagnosaUtama1 = new widget.TextBox();
        jLabel11 = new widget.Label();
        AlasanDiagnosaUtama1 = new widget.TextBox();
        jLabel19 = new widget.Label();
        DiagnosaUtama2 = new widget.TextBox();
        jLabel14 = new widget.Label();
        AlasanDiagnosaUtama2 = new widget.TextBox();
        jLabel20 = new widget.Label();
        DiagnosaUtama3 = new widget.TextBox();
        jLabel15 = new widget.Label();
        AlasanDiagnosaUtama3 = new widget.TextBox();
        jLabel21 = new widget.Label();
        DiagnosaUtama4 = new widget.TextBox();
        jLabel23 = new widget.Label();
        AlasanDiagnosaUtama4 = new widget.TextBox();
        jLabel24 = new widget.Label();
        TNoSep = new widget.TextBox();
        jLabel26 = new widget.Label();
        TNoKartu = new widget.TextBox();
        jLabel27 = new widget.Label();
        TxPetugasBpjs = new widget.TextBox();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        MnSurat.setBackground(new java.awt.Color(255, 255, 254));
        MnSurat.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnSurat.setForeground(new java.awt.Color(50, 50, 50));
        MnSurat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnSurat.setText("Cetak Lembar");
        MnSurat.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MnSurat.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        MnSurat.setName("MnSurat"); // NOI18N
        MnSurat.setPreferredSize(new java.awt.Dimension(180, 26));
        MnSurat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnSuratActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnSurat);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Lembar Konfirmasi Medis ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbObat.setAutoCreateRowSorter(true);
        tbObat.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbObat.setComponentPopupMenu(jPopupMenu1);
        tbObat.setName("tbObat"); // NOI18N
        tbObat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbObatMouseClicked(evt);
            }
        });
        tbObat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbObatKeyReleased(evt);
            }
        });
        Scroll.setViewportView(tbObat);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(44, 100));
        jPanel3.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnSimpan);

        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setName("BtnBatal"); // NOI18N
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnBatal);

        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnHapus.setMnemonic('H');
        BtnHapus.setText("Hapus");
        BtnHapus.setToolTipText("Alt+H");
        BtnHapus.setName("BtnHapus"); // NOI18N
        BtnHapus.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        BtnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHapusKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnHapus);

        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setName("BtnEdit"); // NOI18N
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        BtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnEditKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnEdit);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnPrint);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnAll);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        jPanel3.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        panelGlass10.setName("panelGlass10"); // NOI18N
        panelGlass10.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass10.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(250, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass10.add(TCari);

        RtglKonfirm.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.pink));
        RtglKonfirm.setText("Tanggal  :");
        RtglKonfirm.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RtglKonfirm.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        RtglKonfirm.setName("RtglKonfirm"); // NOI18N
        RtglKonfirm.setPreferredSize(new java.awt.Dimension(80, 23));
        panelGlass10.add(RtglKonfirm);

        DTPCari1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "18-09-2024" }));
        DTPCari1.setDisplayFormat("dd-MM-yyyy");
        DTPCari1.setName("DTPCari1"); // NOI18N
        DTPCari1.setOpaque(false);
        DTPCari1.setPreferredSize(new java.awt.Dimension(100, 23));
        DTPCari1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DTPCari1ItemStateChanged(evt);
            }
        });
        DTPCari1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DTPCari1KeyPressed(evt);
            }
        });
        panelGlass10.add(DTPCari1);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("s.d");
        jLabel22.setName("jLabel22"); // NOI18N
        jLabel22.setPreferredSize(new java.awt.Dimension(25, 23));
        panelGlass10.add(jLabel22);

        DTPCari2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "18-09-2024" }));
        DTPCari2.setDisplayFormat("dd-MM-yyyy");
        DTPCari2.setName("DTPCari2"); // NOI18N
        DTPCari2.setOpaque(false);
        DTPCari2.setPreferredSize(new java.awt.Dimension(100, 23));
        DTPCari2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DTPCari2KeyPressed(evt);
            }
        });
        panelGlass10.add(DTPCari2);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass10.add(BtnCari);

        jLabel7.setText("Record :");
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(65, 23));
        panelGlass10.add(jLabel7);

        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass10.add(LCount);

        jPanel3.add(panelGlass10, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        PanelInput.setName("PanelInput"); // NOI18N
        PanelInput.setOpaque(false);
        PanelInput.setPreferredSize(new java.awt.Dimension(192, 380));
        PanelInput.setLayout(new java.awt.BorderLayout(1, 1));

        ChkInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setMnemonic('M');
        ChkInput.setText(".: Input Data");
        ChkInput.setBorderPainted(true);
        ChkInput.setBorderPaintedFlat(true);
        ChkInput.setFocusable(false);
        ChkInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ChkInput.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkInput.setName("ChkInput"); // NOI18N
        ChkInput.setPreferredSize(new java.awt.Dimension(192, 20));
        ChkInput.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkInputActionPerformed(evt);
            }
        });
        PanelInput.add(ChkInput, java.awt.BorderLayout.PAGE_END);

        FormInput.setName("FormInput"); // NOI18N
        FormInput.setPreferredSize(new java.awt.Dimension(190, 207));
        FormInput.setLayout(null);

        jLabel4.setText("Pasien :");
        jLabel4.setName("jLabel4"); // NOI18N
        FormInput.add(jLabel4);
        jLabel4.setBounds(0, 10, 92, 23);

        BtnCariPasien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnCariPasien.setMnemonic('X');
        BtnCariPasien.setToolTipText("Alt+X");
        BtnCariPasien.setName("BtnCariPasien"); // NOI18N
        BtnCariPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariPasienActionPerformed(evt);
            }
        });
        BtnCariPasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariPasienKeyPressed(evt);
            }
        });
        FormInput.add(BtnCariPasien);
        BtnCariPasien.setBounds(800, 10, 28, 23);

        TNoRw.setEditable(false);
        TNoRw.setHighlighter(null);
        TNoRw.setName("TNoRw"); // NOI18N
        TNoRw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNoRwKeyPressed(evt);
            }
        });
        FormInput.add(TNoRw);
        TNoRw.setBounds(97, 10, 120, 23);

        jLabel9.setText("Dokter :");
        jLabel9.setName("jLabel9"); // NOI18N
        FormInput.add(jLabel9);
        jLabel9.setBounds(440, 220, 92, 23);

        NmDokter.setEditable(false);
        NmDokter.setHighlighter(null);
        NmDokter.setName("NmDokter"); // NOI18N
        FormInput.add(NmDokter);
        NmDokter.setBounds(630, 220, 160, 23);

        TPasien.setEditable(false);
        TPasien.setHighlighter(null);
        TPasien.setName("TPasien"); // NOI18N
        FormInput.add(TPasien);
        TPasien.setBounds(310, 10, 480, 23);

        TanggalKonfirmasi.setForeground(new java.awt.Color(50, 70, 50));
        TanggalKonfirmasi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "18-09-2024 10:19:28" }));
        TanggalKonfirmasi.setDisplayFormat("dd-MM-yyyy HH:mm:ss");
        TanggalKonfirmasi.setName("TanggalKonfirmasi"); // NOI18N
        TanggalKonfirmasi.setOpaque(false);
        TanggalKonfirmasi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TanggalKonfirmasiKeyPressed(evt);
            }
        });
        FormInput.add(TanggalKonfirmasi);
        TanggalKonfirmasi.setBounds(540, 280, 132, 23);

        Status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ranap", "Ralan" }));
        Status.setName("Status"); // NOI18N
        Status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StatusKeyPressed(evt);
            }
        });
        FormInput.add(Status);
        Status.setBounds(540, 250, 130, 23);

        jLabel10.setText("Tanggal Konfirmasi :");
        jLabel10.setName("jLabel10"); // NOI18N
        FormInput.add(jLabel10);
        jLabel10.setBounds(410, 280, 120, 23);

        KdDokter.setEditable(false);
        KdDokter.setHighlighter(null);
        KdDokter.setName("KdDokter"); // NOI18N
        FormInput.add(KdDokter);
        KdDokter.setBounds(540, 220, 87, 23);

        BtnDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnDokter.setMnemonic('X');
        BtnDokter.setToolTipText("Alt+X");
        BtnDokter.setName("BtnDokter"); // NOI18N
        BtnDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDokterActionPerformed(evt);
            }
        });
        BtnDokter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnDokterKeyPressed(evt);
            }
        });
        FormInput.add(BtnDokter);
        BtnDokter.setBounds(790, 220, 28, 23);

        jLabel37.setText("Status :");
        jLabel37.setName("jLabel37"); // NOI18N
        FormInput.add(jLabel37);
        jLabel37.setBounds(470, 250, 60, 23);

        jLabel5.setText("Alasan :");
        jLabel5.setName("jLabel5"); // NOI18N
        FormInput.add(jLabel5);
        jLabel5.setBounds(0, 70, 92, 23);

        AlasanDiagnosaUtama.setHighlighter(null);
        AlasanDiagnosaUtama.setName("AlasanDiagnosaUtama"); // NOI18N
        AlasanDiagnosaUtama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlasanDiagnosaUtamaKeyPressed(evt);
            }
        });
        FormInput.add(AlasanDiagnosaUtama);
        AlasanDiagnosaUtama.setBounds(100, 70, 279, 23);

        TxProsedur2.setHighlighter(null);
        TxProsedur2.setName("TxProsedur2"); // NOI18N
        TxProsedur2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxProsedur2KeyPressed(evt);
            }
        });
        FormInput.add(TxProsedur2);
        TxProsedur2.setBounds(540, 160, 280, 23);

        jLabel8.setText("Prosedur Tambahan 2 :");
        jLabel8.setName("jLabel8"); // NOI18N
        FormInput.add(jLabel8);
        jLabel8.setBounds(410, 160, 120, 23);

        jLabel12.setText("Prosedur Utama :");
        jLabel12.setName("jLabel12"); // NOI18N
        FormInput.add(jLabel12);
        jLabel12.setBounds(440, 100, 92, 23);

        TxProsedurUtama.setHighlighter(null);
        TxProsedurUtama.setName("TxProsedurUtama"); // NOI18N
        TxProsedurUtama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxProsedurUtamaKeyPressed(evt);
            }
        });
        FormInput.add(TxProsedurUtama);
        TxProsedurUtama.setBounds(540, 100, 279, 23);

        jLabel13.setText("Prosedur Tambahan 3 :");
        jLabel13.setName("jLabel13"); // NOI18N
        FormInput.add(jLabel13);
        jLabel13.setBounds(410, 190, 120, 23);

        TxProsedur3.setHighlighter(null);
        TxProsedur3.setName("TxProsedur3"); // NOI18N
        TxProsedur3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxProsedur3KeyPressed(evt);
            }
        });
        FormInput.add(TxProsedur3);
        TxProsedur3.setBounds(540, 190, 280, 23);

        DiagnosaUtama.setHighlighter(null);
        DiagnosaUtama.setName("DiagnosaUtama"); // NOI18N
        DiagnosaUtama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DiagnosaUtamaKeyPressed(evt);
            }
        });
        FormInput.add(DiagnosaUtama);
        DiagnosaUtama.setBounds(100, 40, 280, 23);

        jLabel16.setText("Diagnosa Utama :");
        jLabel16.setName("jLabel16"); // NOI18N
        FormInput.add(jLabel16);
        jLabel16.setBounds(0, 40, 92, 23);

        jLabel17.setText("Prosedur Tambahan 1 :");
        jLabel17.setName("jLabel17"); // NOI18N
        FormInput.add(jLabel17);
        jLabel17.setBounds(410, 130, 120, 23);

        TxProsedur1.setHighlighter(null);
        TxProsedur1.setName("TxProsedur1"); // NOI18N
        TxProsedur1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxProsedur1KeyPressed(evt);
            }
        });
        FormInput.add(TxProsedur1);
        TxProsedur1.setBounds(540, 130, 280, 23);

        TNoRM.setEditable(false);
        TNoRM.setHighlighter(null);
        TNoRM.setName("TNoRM"); // NOI18N
        TNoRM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNoRMKeyPressed(evt);
            }
        });
        FormInput.add(TNoRM);
        TNoRM.setBounds(220, 10, 87, 23);

        jLabel18.setText("Diagnosa 1 :");
        jLabel18.setName("jLabel18"); // NOI18N
        FormInput.add(jLabel18);
        jLabel18.setBounds(0, 100, 92, 23);

        DiagnosaUtama1.setHighlighter(null);
        DiagnosaUtama1.setName("DiagnosaUtama1"); // NOI18N
        DiagnosaUtama1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DiagnosaUtama1KeyPressed(evt);
            }
        });
        FormInput.add(DiagnosaUtama1);
        DiagnosaUtama1.setBounds(100, 100, 280, 23);

        jLabel11.setText("Alasan 1 :");
        jLabel11.setName("jLabel11"); // NOI18N
        FormInput.add(jLabel11);
        jLabel11.setBounds(0, 130, 92, 23);

        AlasanDiagnosaUtama1.setHighlighter(null);
        AlasanDiagnosaUtama1.setName("AlasanDiagnosaUtama1"); // NOI18N
        AlasanDiagnosaUtama1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlasanDiagnosaUtama1KeyPressed(evt);
            }
        });
        FormInput.add(AlasanDiagnosaUtama1);
        AlasanDiagnosaUtama1.setBounds(100, 130, 279, 23);

        jLabel19.setText("Diagnosa 2 :");
        jLabel19.setName("jLabel19"); // NOI18N
        FormInput.add(jLabel19);
        jLabel19.setBounds(0, 160, 92, 23);

        DiagnosaUtama2.setHighlighter(null);
        DiagnosaUtama2.setName("DiagnosaUtama2"); // NOI18N
        DiagnosaUtama2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DiagnosaUtama2KeyPressed(evt);
            }
        });
        FormInput.add(DiagnosaUtama2);
        DiagnosaUtama2.setBounds(100, 160, 280, 23);

        jLabel14.setText("Alasan 2 :");
        jLabel14.setName("jLabel14"); // NOI18N
        FormInput.add(jLabel14);
        jLabel14.setBounds(0, 190, 92, 23);

        AlasanDiagnosaUtama2.setHighlighter(null);
        AlasanDiagnosaUtama2.setName("AlasanDiagnosaUtama2"); // NOI18N
        AlasanDiagnosaUtama2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlasanDiagnosaUtama2KeyPressed(evt);
            }
        });
        FormInput.add(AlasanDiagnosaUtama2);
        AlasanDiagnosaUtama2.setBounds(100, 190, 279, 23);

        jLabel20.setText("Diagnosa 3 :");
        jLabel20.setName("jLabel20"); // NOI18N
        FormInput.add(jLabel20);
        jLabel20.setBounds(0, 220, 92, 23);

        DiagnosaUtama3.setHighlighter(null);
        DiagnosaUtama3.setName("DiagnosaUtama3"); // NOI18N
        DiagnosaUtama3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DiagnosaUtama3KeyPressed(evt);
            }
        });
        FormInput.add(DiagnosaUtama3);
        DiagnosaUtama3.setBounds(100, 220, 280, 23);

        jLabel15.setText("Alasan 3 :");
        jLabel15.setName("jLabel15"); // NOI18N
        FormInput.add(jLabel15);
        jLabel15.setBounds(0, 250, 92, 23);

        AlasanDiagnosaUtama3.setHighlighter(null);
        AlasanDiagnosaUtama3.setName("AlasanDiagnosaUtama3"); // NOI18N
        AlasanDiagnosaUtama3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlasanDiagnosaUtama3KeyPressed(evt);
            }
        });
        FormInput.add(AlasanDiagnosaUtama3);
        AlasanDiagnosaUtama3.setBounds(100, 250, 279, 23);

        jLabel21.setText("Diagnosa 4 :");
        jLabel21.setName("jLabel21"); // NOI18N
        FormInput.add(jLabel21);
        jLabel21.setBounds(0, 280, 92, 23);

        DiagnosaUtama4.setHighlighter(null);
        DiagnosaUtama4.setName("DiagnosaUtama4"); // NOI18N
        DiagnosaUtama4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DiagnosaUtama4KeyPressed(evt);
            }
        });
        FormInput.add(DiagnosaUtama4);
        DiagnosaUtama4.setBounds(100, 280, 280, 23);

        jLabel23.setText("Alasan 4 :");
        jLabel23.setName("jLabel23"); // NOI18N
        FormInput.add(jLabel23);
        jLabel23.setBounds(0, 310, 92, 23);

        AlasanDiagnosaUtama4.setHighlighter(null);
        AlasanDiagnosaUtama4.setName("AlasanDiagnosaUtama4"); // NOI18N
        AlasanDiagnosaUtama4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlasanDiagnosaUtama4KeyPressed(evt);
            }
        });
        FormInput.add(AlasanDiagnosaUtama4);
        AlasanDiagnosaUtama4.setBounds(100, 310, 279, 23);

        jLabel24.setText("No SEP :");
        jLabel24.setName("jLabel24"); // NOI18N
        FormInput.add(jLabel24);
        jLabel24.setBounds(440, 70, 92, 23);

        TNoSep.setHighlighter(null);
        TNoSep.setName("TNoSep"); // NOI18N
        TNoSep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNoSepKeyPressed(evt);
            }
        });
        FormInput.add(TNoSep);
        TNoSep.setBounds(540, 70, 279, 23);

        jLabel26.setText("No Kartu :");
        jLabel26.setName("jLabel26"); // NOI18N
        FormInput.add(jLabel26);
        jLabel26.setBounds(440, 40, 92, 23);

        TNoKartu.setHighlighter(null);
        TNoKartu.setName("TNoKartu"); // NOI18N
        TNoKartu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNoKartuKeyPressed(evt);
            }
        });
        FormInput.add(TNoKartu);
        TNoKartu.setBounds(540, 40, 279, 23);

        jLabel27.setText("Nama Petugas Bpjs :");
        jLabel27.setName("jLabel27"); // NOI18N
        FormInput.add(jLabel27);
        jLabel27.setBounds(410, 310, 120, 23);

        TxPetugasBpjs.setHighlighter(null);
        TxPetugasBpjs.setName("TxPetugasBpjs"); // NOI18N
        TxPetugasBpjs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxPetugasBpjsKeyPressed(evt);
            }
        });
        FormInput.add(TxPetugasBpjs);
        TxPetugasBpjs.setBounds(540, 310, 280, 23);

        PanelInput.add(FormInput, java.awt.BorderLayout.CENTER);

        internalFrame1.add(PanelInput, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TNoRwKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNoRwKeyPressed
        Valid.pindah(evt,Status,KdDokter);
        
}//GEN-LAST:event_TNoRwKeyPressed

    private void TanggalKonfirmasiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TanggalKonfirmasiKeyPressed
        Valid.pindah(evt,TCari,Status);
}//GEN-LAST:event_TanggalKonfirmasiKeyPressed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if(TNoRw.getText().trim().equals("")||TPasien.getText().trim().equals("")){
            Valid.textKosong(TNoRw,"pasien");
        }else if(NmDokter.getText().trim().equals("")||KdDokter.getText().trim().equals("")){
            Valid.textKosong(KdDokter,"Dokter");
        }else if(TxProsedur1.getText().trim().equals("")){
            Valid.textKosong(TxProsedur1,"Terapi");
        }else if(DiagnosaUtama.getText().trim().equals("")){
            Valid.textKosong(DiagnosaUtama,"Diagnosa");
        }else{
             if(akses.getkode().equals("Admin Utama")){
                isBooking();
            }else{
                isBooking();
            }            
        }
}//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{
            Valid.pindah(evt,TNoRw,BtnBatal);
        }
}//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        emptTeks();
        ChkInput.setSelected(true);
        isForm(); 
}//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            emptTeks();
        }else{Valid.pindah(evt, BtnSimpan, BtnHapus);}
}//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis...!!!!");
            TanggalKonfirmasi.requestFocus();
        }else if(TPasien.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Gagal menghapus. Pilih dulu data yang mau dihapus.\nKlik data pada table untuk memilih...!!!!");
        }else if(!(TPasien.getText().trim().equals(""))){
            if(tbObat.getSelectedRow()!= -1){
                if(Sequel.queryu2tf("delete from lembar_konfirmasi_medis where no_rawat=? and tgl_konfirmasi=? and jam_konfirmasi=? and dokter=? and status=?",5,new String[]{
                    tbObat.getValueAt(tbObat.getSelectedRow(),0).toString(),
                    tbObat.getValueAt(tbObat.getSelectedRow(),5).toString(),
                    tbObat.getValueAt(tbObat.getSelectedRow(),6).toString(),
                    tbObat.getValueAt(tbObat.getSelectedRow(),7).toString(),
                    tbObat.getValueAt(tbObat.getSelectedRow(),24).toString()
                })==true){
                    tabMode.removeRow(tbObat.getSelectedRow());
                    LCount.setText(""+tabMode.getRowCount());
                    emptTeks();
                }                        
            }else{
                JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih terlebih dulu data yang mau anda hapus...\n Klik data pada table untuk memilih data...!!!!");
            }  
        }
}//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHapusKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnHapusActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnBatal, BtnPrint);
        }
}//GEN-LAST:event_BtnHapusKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnPrint,TCari);}
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            BtnBatal.requestFocus();
        }else if(tabMode.getRowCount()!=0){
            Map<String, Object> param = new HashMap<>();  
            param.put("namars",akses.getnamars());
            param.put("alamatrs",akses.getalamatrs());
            param.put("kotars",akses.getkabupatenrs());
            param.put("propinsirs",akses.getpropinsirs());
            param.put("kontakrs",akses.getkontakrs());
            param.put("emailrs",akses.getemailrs());   
            param.put("logo",Sequel.cariGambar("select setting.logo from setting")); 
            
            Sequel.queryu("delete from temporary_booking_registrasi");
            for(i=0;i<tabMode.getRowCount();i++){ 
                Sequel.menyimpan("temporary_booking_registrasi","'0','"+
                    tabMode.getValueAt(i,0).toString()+"','"+
                    tabMode.getValueAt(i,1).toString()+"','"+
                    tabMode.getValueAt(i,2).toString()+"','"+
                    tabMode.getValueAt(i,3).toString()+"','"+
                    tabMode.getValueAt(i,4).toString()+"','"+
                    tabMode.getValueAt(i,5).toString()+"','"+
                    tabMode.getValueAt(i,6).toString()+"','"+
                    tabMode.getValueAt(i,7).toString()+"','"+
                    tabMode.getValueAt(i,8).toString()+"','"+
                    tabMode.getValueAt(i,9).toString()+"','"+
                    tabMode.getValueAt(i,10).toString()+"','"+
                    tabMode.getValueAt(i,11).toString()+"','"+
                    tabMode.getValueAt(i,12).toString()+"','"+
                    tabMode.getValueAt(i,13).toString()+"','"+
                    tabMode.getValueAt(i,14).toString()+"','"+
                    tabMode.getValueAt(i,15).toString()+"','"+
                    tabMode.getValueAt(i,16).toString()+"','"+
                    tabMode.getValueAt(i,17).toString()+"','','','','','','','','','','','','','','','','','','',''","Rekap Nota Pembayaran");
            }
             
            Valid.MyReport("rptSKDPBPJS.jasper","report","::[ Laporan Daftar Surat Kontrol ]::",param);
        }
        this.setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnHapus, BtnKeluar);
        }
}//GEN-LAST:event_BtnPrintKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }
}//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil();
}//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, TCari, BtnAll);
        }
}//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
//        TCari.setText("");
        RtglKonfirm.setSelected(false);
        tampil();
}//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            tampil();
            TCari.setText("");
        }else{
            Valid.pindah(evt, BtnCari, TPasien);
        }
}//GEN-LAST:event_BtnAllKeyPressed

    private void tbObatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbObatMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
                getData();
            } catch (java.lang.NullPointerException e) {
            }
        }
}//GEN-LAST:event_tbObatMouseClicked

private void BtnDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDokterActionPerformed
    dokter.isCek();        
    dokter.TCari.requestFocus();
    dokter.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight()-20);
    dokter.setLocationRelativeTo(internalFrame1);
    dokter.setVisible(true);
}//GEN-LAST:event_BtnDokterActionPerformed

private void BtnDokterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnDokterKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_SPACE){
        BtnDokterActionPerformed(null);
    }else{
        Valid.pindah(evt,TxProsedur3,DiagnosaUtama);
    }        
}//GEN-LAST:event_BtnDokterKeyPressed

private void ChkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkInputActionPerformed
  isForm();                
}//GEN-LAST:event_ChkInputActionPerformed

    private void DTPCari1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DTPCari1KeyPressed

    }//GEN-LAST:event_DTPCari1KeyPressed

    private void DTPCari2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DTPCari2KeyPressed
        RtglKonfirm.setSelected(true);
    }//GEN-LAST:event_DTPCari2KeyPressed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if(TNoRw.getText().trim().equals("")||TPasien.getText().trim().equals("")){
            Valid.textKosong(TNoRw,"pasien");
        }else if(NmDokter.getText().trim().equals("")||KdDokter.getText().trim().equals("")){
            Valid.textKosong(KdDokter,"Dokter");
        }else if(TxProsedurUtama.getText().trim().equals("")){
            Valid.textKosong(TxProsedurUtama,"Prosedur Utama");
        }else if(DiagnosaUtama.getText().trim().equals("")){
            Valid.textKosong(DiagnosaUtama,"Diagnosa Utama");
        }else{
            if(tbObat.getSelectedRow()!= -1){
                if(Sequel.mengedittf("lembar_konfirmasi_medis",
                        "no_rawat=? and tgl_konfirmasi=? and jam_konfirmasi=? and dokter=? and status=?",
                        "tgl_konfirmasi=?, jam_konfirmasi=?, no_kartu=?, no_sep=?, dokter=?, petugas_bpjs=?, diagnosa_utama=?, alasan_diagnosa_utama=?, diagnosa1=?, alasan_diagnosa1=?, diagnosa2=?, alasan_diagnosa2=?, diagnosa3=?, alasan_diagnosa3=?, diagnosa4=?, alasan_diagnosa4=?, prosedur_utama=?, prosedur1=?, prosedur2=?, prosedur3=?, status=? ",26,new String[]{
                        Valid.SetTgl(TanggalKonfirmasi.getSelectedItem()+""),
                        TanggalKonfirmasi.getSelectedItem().toString().substring(11,19),
                        TNoKartu.getText(),
                        TNoSep.getText(),
                        KdDokter.getText(),
                        TxPetugasBpjs.getText(),
                        DiagnosaUtama.getText(),
                        AlasanDiagnosaUtama.getText(),
                        DiagnosaUtama1.getText(),
                        AlasanDiagnosaUtama1.getText(),
                        DiagnosaUtama2.getText(),
                        AlasanDiagnosaUtama2.getText(),
                        DiagnosaUtama3.getText(),
                        AlasanDiagnosaUtama3.getText(),
                        DiagnosaUtama4.getText(),
                        AlasanDiagnosaUtama4.getText(),
                        TxProsedurUtama.getText(),
                        TxProsedur1.getText(),
                        TxProsedur2.getText(),
                        TxProsedur3.getText(),
                        Status.getSelectedItem().toString(),
                            tbObat.getValueAt(tbObat.getSelectedRow(),0).toString(),
                            tbObat.getValueAt(tbObat.getSelectedRow(),5).toString(),
                            tbObat.getValueAt(tbObat.getSelectedRow(),6).toString(),
                            tbObat.getValueAt(tbObat.getSelectedRow(),7).toString(),
                            tbObat.getValueAt(tbObat.getSelectedRow(),24).toString()
                  })==true){
                    
                    tbObat.setValueAt(TNoRw.getText(),tbObat.getSelectedRow(),0);
                    tbObat.setValueAt(TNoRM.getText(),tbObat.getSelectedRow(),1);
                    tbObat.setValueAt(TPasien.getText(),tbObat.getSelectedRow(),2);
                    tbObat.setValueAt(TNoKartu.getText(),tbObat.getSelectedRow(),3);
                    tbObat.setValueAt(TNoSep.getText(),tbObat.getSelectedRow(),4);
                    tbObat.setValueAt(Valid.SetTgl(TanggalKonfirmasi.getSelectedItem()+""),tbObat.getSelectedRow(),5);
                    tbObat.setValueAt(TanggalKonfirmasi.getSelectedItem().toString().substring(11,19),tbObat.getSelectedRow(),6);
                    tbObat.setValueAt(KdDokter.getText(),tbObat.getSelectedRow(),7);
                    tbObat.setValueAt(NmDokter.getText(),tbObat.getSelectedRow(),8);
                    tbObat.setValueAt(TxPetugasBpjs.getText(),tbObat.getSelectedRow(),9);
                    tbObat.setValueAt(DiagnosaUtama.getText(),tbObat.getSelectedRow(),10);
                    tbObat.setValueAt(AlasanDiagnosaUtama.getText(),tbObat.getSelectedRow(),11);
                    tbObat.setValueAt(DiagnosaUtama1.getText(),tbObat.getSelectedRow(),12);
                    tbObat.setValueAt(AlasanDiagnosaUtama1.getText(),tbObat.getSelectedRow(),13);
                    tbObat.setValueAt(DiagnosaUtama2.getText(),tbObat.getSelectedRow(),14);
                    tbObat.setValueAt(AlasanDiagnosaUtama2.getText(),tbObat.getSelectedRow(),15);
                    tbObat.setValueAt(DiagnosaUtama3.getText(),tbObat.getSelectedRow(),16);
                    tbObat.setValueAt(AlasanDiagnosaUtama3.getText(),tbObat.getSelectedRow(),17);
                    tbObat.setValueAt(DiagnosaUtama4.getText(),tbObat.getSelectedRow(),18);
                    tbObat.setValueAt(AlasanDiagnosaUtama4.getText(),tbObat.getSelectedRow(),19);
                    tbObat.setValueAt(TxProsedurUtama.getText(),tbObat.getSelectedRow(),20);
                    tbObat.setValueAt(TxProsedur1.getText(),tbObat.getSelectedRow(),21);
                    tbObat.setValueAt(TxProsedur2.getText(),tbObat.getSelectedRow(),22);
                    tbObat.setValueAt(TxProsedur3.getText(),tbObat.getSelectedRow(),23);
                    tbObat.setValueAt(Status.getSelectedItem().toString(),tbObat.getSelectedRow(),24);
                    emptTeks();
                }
            }else{
                JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih terlebih dulu data yang mau anda ganti...\n Klik data pada table untuk memilih data...!!!!");
            }                
        }
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnEditKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnEditActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnHapus, BtnKeluar);
        }
    }//GEN-LAST:event_BtnEditKeyPressed

    private void StatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StatusKeyPressed
        Valid.pindah(evt,TanggalKonfirmasi,DiagnosaUtama);
    }//GEN-LAST:event_StatusKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampil();
    }//GEN-LAST:event_formWindowOpened

    private void DTPCari1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DTPCari1ItemStateChanged
        RtglKonfirm.setSelected(true);
    }//GEN-LAST:event_DTPCari1ItemStateChanged

    private void AlasanDiagnosaUtamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlasanDiagnosaUtamaKeyPressed
        Valid.pindah(evt,TxProsedur1,TxProsedur2);
    }//GEN-LAST:event_AlasanDiagnosaUtamaKeyPressed

    private void TxProsedur2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxProsedur2KeyPressed
        Valid.pindah(evt,AlasanDiagnosaUtama,TxProsedurUtama);
    }//GEN-LAST:event_TxProsedur2KeyPressed

    private void TxProsedurUtamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxProsedurUtamaKeyPressed
        Valid.pindah(evt,TxProsedur2,TxProsedur3);
    }//GEN-LAST:event_TxProsedurUtamaKeyPressed

    private void TxProsedur3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxProsedur3KeyPressed
        Valid.pindah(evt,TxProsedurUtama,BtnDokter);
    }//GEN-LAST:event_TxProsedur3KeyPressed

    private void DiagnosaUtamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiagnosaUtamaKeyPressed
        Valid.pindah(evt,Status,TxProsedur1);
    }//GEN-LAST:event_DiagnosaUtamaKeyPressed

    private void TxProsedur1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxProsedur1KeyPressed
        Valid.pindah(evt,DiagnosaUtama,AlasanDiagnosaUtama);
    }//GEN-LAST:event_TxProsedur1KeyPressed

    private void MnSuratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnSuratActionPerformed
        if(tabMode.getRowCount()==0){
            JOptionPane.showMessageDialog(null,"Maaf, data sudah habis...!!!!");
            TanggalKonfirmasi.requestFocus();
        }else if(TPasien.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Gagal menghapus. Pilih dulu data yang mau dihapus.\nKlik data pada table untuk memilih...!!!!");
        }else if(!(TPasien.getText().trim().equals(""))){
            if(tbObat.getSelectedRow()!= -1){
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Map<String, Object> param = new HashMap<>();  
                param.put("namars",akses.getnamars());
                param.put("alamatrs",akses.getalamatrs());
                param.put("kotars",akses.getkabupatenrs());
                param.put("propinsirs",akses.getpropinsirs());
                param.put("kontakrs",akses.getkontakrs());
                param.put("emailrs",akses.getemailrs());   
                param.put("logo",Sequel.cariGambar("select setting.logo from setting")); 
                finger=Sequel.cariIsi("select sha1(sidikjari.sidikjari) from sidikjari inner join pegawai on pegawai.id=sidikjari.id where pegawai.nik=?",tbObat.getValueAt(tbObat.getSelectedRow(),13).toString());
                param.put("finger","Dikeluarkan di "+akses.getnamars()+", Kabupaten/Kota "+akses.getkabupatenrs()+"\nDitandatangani secara elektronik oleh "+tbObat.getValueAt(tbObat.getSelectedRow(),14).toString()+"\nID "+(finger.equals("")?tbObat.getValueAt(tbObat.getSelectedRow(),13).toString():finger)+"\n"+Valid.SetTgl3(tbObat.getValueAt(tbObat.getSelectedRow(),10).toString()));
                
                Valid.MyReport("rptLembarKonfirmasiMedis.jasper","report","::[ Lembar Konfirmasi Medis ]::",param); 
                this.setCursor(Cursor.getDefaultCursor());
            }else{
                JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih terlebih dulu data yang mau anda hapus...\n Klik data pada table untuk memilih data...!!!!");
            }  
        }
    }//GEN-LAST:event_MnSuratActionPerformed

    private void tbObatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbObatKeyReleased
        if(tabMode.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getData();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
    }//GEN-LAST:event_tbObatKeyReleased

    private void TNoRMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNoRMKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNoRMKeyPressed

    private void DiagnosaUtama1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiagnosaUtama1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiagnosaUtama1KeyPressed

    private void AlasanDiagnosaUtama1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlasanDiagnosaUtama1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlasanDiagnosaUtama1KeyPressed

    private void DiagnosaUtama2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiagnosaUtama2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiagnosaUtama2KeyPressed

    private void AlasanDiagnosaUtama2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlasanDiagnosaUtama2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlasanDiagnosaUtama2KeyPressed

    private void DiagnosaUtama3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiagnosaUtama3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiagnosaUtama3KeyPressed

    private void AlasanDiagnosaUtama3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlasanDiagnosaUtama3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlasanDiagnosaUtama3KeyPressed

    private void DiagnosaUtama4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DiagnosaUtama4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiagnosaUtama4KeyPressed

    private void AlasanDiagnosaUtama4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlasanDiagnosaUtama4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlasanDiagnosaUtama4KeyPressed

    private void TNoSepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNoSepKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNoSepKeyPressed

    private void TNoKartuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNoKartuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNoKartuKeyPressed

    private void BtnCariPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariPasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCariPasienActionPerformed

    private void BtnCariPasienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariPasienKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCariPasienKeyPressed

    private void TxPetugasBpjsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxPetugasBpjsKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxPetugasBpjsKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            LembarKonfirmasiMedis dialog = new LembarKonfirmasiMedis(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.TextBox AlasanDiagnosaUtama;
    private widget.TextBox AlasanDiagnosaUtama1;
    private widget.TextBox AlasanDiagnosaUtama2;
    private widget.TextBox AlasanDiagnosaUtama3;
    private widget.TextBox AlasanDiagnosaUtama4;
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    private widget.Button BtnCari;
    private widget.Button BtnCariPasien;
    private widget.Button BtnDokter;
    private widget.Button BtnEdit;
    private widget.Button BtnHapus;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.Button BtnSimpan;
    private widget.CekBox ChkInput;
    private widget.Tanggal DTPCari1;
    private widget.Tanggal DTPCari2;
    private widget.TextBox DiagnosaUtama;
    private widget.TextBox DiagnosaUtama1;
    private widget.TextBox DiagnosaUtama2;
    private widget.TextBox DiagnosaUtama3;
    private widget.TextBox DiagnosaUtama4;
    private widget.PanelBiasa FormInput;
    private widget.TextBox KdDokter;
    private widget.Label LCount;
    private javax.swing.JMenuItem MnSurat;
    private widget.TextBox NmDokter;
    private javax.swing.JPanel PanelInput;
    private widget.RadioButton RtglKonfirm;
    private widget.ScrollPane Scroll;
    private widget.ComboBox Status;
    private widget.TextBox TCari;
    private widget.TextBox TNoKartu;
    private widget.TextBox TNoRM;
    private widget.TextBox TNoRw;
    private widget.TextBox TNoSep;
    private widget.TextBox TPasien;
    private widget.Tanggal TanggalKonfirmasi;
    private widget.TextBox TxPetugasBpjs;
    private widget.TextBox TxProsedur1;
    private widget.TextBox TxProsedur2;
    private widget.TextBox TxProsedur3;
    private widget.TextBox TxProsedurUtama;
    private javax.swing.ButtonGroup buttonGroup1;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel10;
    private widget.Label jLabel11;
    private widget.Label jLabel12;
    private widget.Label jLabel13;
    private widget.Label jLabel14;
    private widget.Label jLabel15;
    private widget.Label jLabel16;
    private widget.Label jLabel17;
    private widget.Label jLabel18;
    private widget.Label jLabel19;
    private widget.Label jLabel20;
    private widget.Label jLabel21;
    private widget.Label jLabel22;
    private widget.Label jLabel23;
    private widget.Label jLabel24;
    private widget.Label jLabel26;
    private widget.Label jLabel27;
    private widget.Label jLabel37;
    private widget.Label jLabel4;
    private widget.Label jLabel5;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private widget.Label jLabel8;
    private widget.Label jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.panelisi panelGlass10;
    private widget.panelisi panelGlass8;
    private widget.Table tbObat;
    // End of variables declaration//GEN-END:variables

    private void tampil() {     
        Valid.tabelKosong(tabMode);
        try {
            if (RtglKonfirm.isSelected()==true) {
                caritglKonfirm=" lembar_konfirmasi_medis.tgl_konfirmasi between '"+Valid.SetTgl(DTPCari1.getSelectedItem()+"")+"' and '"+Valid.SetTgl(DTPCari2.getSelectedItem()+"")+"' AND ";
            } else {
                caritglKonfirm="";
            }
            ps=koneksi.prepareStatement(
                    "SELECT\n" +
                    "	lembar_konfirmasi_medis.no_rawat, \n" +
                    "	lembar_konfirmasi_medis.tgl_konfirmasi, \n" +
                    "	lembar_konfirmasi_medis.jam_konfirmasi, \n" +
                    "	lembar_konfirmasi_medis.no_kartu, \n" +
                    "	lembar_konfirmasi_medis.no_sep, \n" +
                    "	lembar_konfirmasi_medis.dokter, \n" +
                    "	lembar_konfirmasi_medis.petugas_bpjs, \n" +
                    "	lembar_konfirmasi_medis.diagnosa_utama, \n" +
                    "	lembar_konfirmasi_medis.alasan_diagnosa_utama, \n" +
                    "	lembar_konfirmasi_medis.diagnosa1, \n" +
                    "	lembar_konfirmasi_medis.alasan_diagnosa1, \n" +
                    "	lembar_konfirmasi_medis.diagnosa2, \n" +
                    "	lembar_konfirmasi_medis.alasan_diagnosa2, \n" +
                    "	lembar_konfirmasi_medis.diagnosa3, \n" +
                    "	lembar_konfirmasi_medis.alasan_diagnosa3, \n" +
                    "	lembar_konfirmasi_medis.diagnosa4, \n" +
                    "	lembar_konfirmasi_medis.alasan_diagnosa4, \n" +
                    "	lembar_konfirmasi_medis.prosedur_utama, \n" +
                    "	lembar_konfirmasi_medis.prosedur1, \n" +
                    "	lembar_konfirmasi_medis.prosedur2, \n" +
                    "	lembar_konfirmasi_medis.prosedur3, \n" +
                    "	lembar_konfirmasi_medis.`status`, \n" +
                    "	pasien.nm_pasien, pasien.no_rkm_medis, \n" +
                    "	dokter.nm_dokter\n" +
                    "FROM\n" +
                    "	lembar_konfirmasi_medis\n" +
                    "	INNER JOIN\n" +
                    "	reg_periksa\n" +
                    "	ON \n" +
                    "		lembar_konfirmasi_medis.no_rawat = reg_periksa.no_rawat\n" +
                    "	INNER JOIN\n" +
                    "	pasien\n" +
                    "	ON \n" +
                    "		reg_periksa.no_rkm_medis = pasien.no_rkm_medis\n" +
                    "	INNER JOIN\n" +
                    "	dokter\n" +
                    "	ON \n" +
                    "		lembar_konfirmasi_medis.dokter = dokter.kd_dokter "+
                    "where "
                            + caritglKonfirm
                            + " pasien.no_rkm_medis like ? or pasien.nm_pasien like ? or lembar_konfirmasi_medis.diagnosa_utama like ? or lembar_konfirmasi_medis.prosedur_utama like ? or dokter.nm_dokter like ? order by lembar_konfirmasi_medis.tgl_konfirmasi DESC,lembar_konfirmasi_medis.jam_konfirmasi DESC");
            try {
                ps.setString(1,"%"+TCari.getText().trim()+"%");
                ps.setString(2,"%"+TCari.getText().trim()+"%");
                ps.setString(3,"%"+TCari.getText().trim()+"%");
                ps.setString(4,"%"+TCari.getText().trim()+"%");
                ps.setString(5,"%"+TCari.getText().trim()+"%");
                rs=ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new Object[]{
                        rs.getString("no_rawat"), 
                        rs.getString("no_rkm_medis"), 
                        rs.getString("nm_pasien"), 
                        rs.getString("no_kartu"), 
                        rs.getString("no_sep"), 
                        rs.getString("tgl_konfirmasi"), 
                        rs.getString("jam_konfirmasi"), 
                        rs.getString("dokter"), 
                        rs.getString("nm_dokter"),
                        rs.getString("petugas_bpjs"), 
                        rs.getString("diagnosa_utama"), 
                        rs.getString("alasan_diagnosa_utama"), 
                        rs.getString("diagnosa1"), 
                        rs.getString("alasan_diagnosa1"), 
                        rs.getString("diagnosa2"), 
                        rs.getString("alasan_diagnosa2"), 
                        rs.getString("diagnosa3"), 
                        rs.getString("alasan_diagnosa3"), 
                        rs.getString("diagnosa4"), 
                        rs.getString("alasan_diagnosa4"), 
                        rs.getString("prosedur_utama"), 
                        rs.getString("prosedur1"), 
                        rs.getString("prosedur2"), 
                        rs.getString("prosedur3"), 
                        rs.getString("status"),
                    });                    
                }
            } catch (Exception e) {
                System.out.println("Notif : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        } catch (Exception e) {
            System.out.println("Notif : "+e);
        } 
        LCount.setText(""+tabMode.getRowCount());
    }


    public void emptTeks() {
        TNoKartu.setText("");
        TNoSep.setText("");
        KdDokter.setText("");
        NmDokter.setText("");
        TxPetugasBpjs.setText("");
        DiagnosaUtama.setText("");
        AlasanDiagnosaUtama.setText("");
        DiagnosaUtama1.setText("");
        AlasanDiagnosaUtama1.setText("");
        DiagnosaUtama2.setText("");
        AlasanDiagnosaUtama2.setText("");
        DiagnosaUtama3.setText("");
        AlasanDiagnosaUtama3.setText("");
        DiagnosaUtama4.setText("");
        AlasanDiagnosaUtama4.setText("");
        TxProsedurUtama.setText("");
        TxProsedur1.setText("");
        TxProsedur2.setText("");
        TxProsedur3.setText("");
        TanggalKonfirmasi.setDate(new Date());
        TanggalKonfirmasi.requestFocus();
        Status.setSelectedItem(rStatus);
        isNomer();
    }
    
    private void isNomer(){
        
    }

    private void getData() {
        if(tbObat.getSelectedRow()!= -1){
            TNoRw.setText(tbObat.getValueAt(tbObat.getSelectedRow(),0).toString());
            TNoRM.setText(tbObat.getValueAt(tbObat.getSelectedRow(),1).toString());
            TPasien.setText(tbObat.getValueAt(tbObat.getSelectedRow(),2).toString());
            TNoKartu.setText(tbObat.getValueAt(tbObat.getSelectedRow(),3).toString());
            TNoSep.setText(tbObat.getValueAt(tbObat.getSelectedRow(),4).toString());
            Valid.SetTgl2(TanggalKonfirmasi,tbObat.getValueAt(tbObat.getSelectedRow(),5).toString()+" "+tbObat.getValueAt(tbObat.getSelectedRow(),6).toString());
            KdDokter.setText(tbObat.getValueAt(tbObat.getSelectedRow(),7).toString());
            NmDokter.setText(tbObat.getValueAt(tbObat.getSelectedRow(),8).toString());
            TxPetugasBpjs.setText(tbObat.getValueAt(tbObat.getSelectedRow(),9).toString());
            DiagnosaUtama.setText(tbObat.getValueAt(tbObat.getSelectedRow(),10).toString());
            AlasanDiagnosaUtama.setText(tbObat.getValueAt(tbObat.getSelectedRow(),11).toString());
            DiagnosaUtama1.setText(tbObat.getValueAt(tbObat.getSelectedRow(),12).toString());
            AlasanDiagnosaUtama1.setText(tbObat.getValueAt(tbObat.getSelectedRow(),13).toString());
            DiagnosaUtama2.setText(tbObat.getValueAt(tbObat.getSelectedRow(),14).toString());
            AlasanDiagnosaUtama2.setText(tbObat.getValueAt(tbObat.getSelectedRow(),15).toString());
            DiagnosaUtama3.setText(tbObat.getValueAt(tbObat.getSelectedRow(),16).toString());
            AlasanDiagnosaUtama3.setText(tbObat.getValueAt(tbObat.getSelectedRow(),17).toString());
            DiagnosaUtama4.setText(tbObat.getValueAt(tbObat.getSelectedRow(),18).toString());
            AlasanDiagnosaUtama4.setText(tbObat.getValueAt(tbObat.getSelectedRow(),19).toString());
            TxProsedurUtama.setText(tbObat.getValueAt(tbObat.getSelectedRow(),20).toString());
            TxProsedur1.setText(tbObat.getValueAt(tbObat.getSelectedRow(),21).toString());
            TxProsedur2.setText(tbObat.getValueAt(tbObat.getSelectedRow(),22).toString());
            TxProsedur3.setText(tbObat.getValueAt(tbObat.getSelectedRow(),23).toString());
            Status.setSelectedItem(tbObat.getValueAt(tbObat.getSelectedRow(),24).toString());
        }
    }
    
    public void setNoRm(String norm,String nama) {
        TNoRw.setText(norm);
        TPasien.setText(nama);
        TCari.setText(norm);
        ChkInput.setSelected(true);
        isForm();
        tampil();
    }
    
    public void setNoRm(String norawat,String norm,String nama,String kodedokter,String nokartu,String sep,String status) {
        TNoRw.setText(norawat);
        TNoRM.setText(norm);
        TPasien.setText(nama);
        KdDokter.setText(kodedokter);
        NmDokter.setText(dokter.tampil3(KdDokter.getText()));
        TNoKartu.setText(nokartu);
        TNoSep.setText(sep);
        Status.setSelectedItem(status);
        this.rStatus=status;
        TCari.setText(norm);
        ChkInput.setSelected(true);
        isForm();
        tampil();
    }
    
    private void isForm(){
        if(ChkInput.isSelected()==true){
            ChkInput.setVisible(false);
            PanelInput.setPreferredSize(new Dimension(WIDTH,380));
            FormInput.setVisible(true);      
            ChkInput.setVisible(true);
        }else if(ChkInput.isSelected()==false){           
            ChkInput.setVisible(false);            
            PanelInput.setPreferredSize(new Dimension(WIDTH,20));
            FormInput.setVisible(false);      
            ChkInput.setVisible(true);
        }
    }
    
    public void isCek(){
        BtnSimpan.setEnabled(akses.getdata_resume_pasien());
        BtnHapus.setEnabled(akses.getdata_resume_pasien());
        BtnEdit.setEnabled(akses.getdata_resume_pasien());
        BtnPrint.setEnabled(akses.getdata_resume_pasien());     
        if(akses.getjml2()>=1){
            KdDokter.setEditable(false);
//            BtnDokter.setEnabled(false);
            KdDokter.setText(akses.getkode());
            NmDokter.setText(dokter.tampil3(KdDokter.getText()));
            if(NmDokter.getText().equals("")){
                KdDokter.setText("");
                JOptionPane.showMessageDialog(null,"User login bukan dokter...!!");
            }
        }
    }

    public JTable getTable(){
        return tbObat;
    }

    private void isBooking(){
        if(Sequel.menyimpantf("lembar_konfirmasi_medis","?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?","Lembar Konfirmasi Medis",22,new String[]{
            TNoRw.getText(),
            Valid.SetTgl(TanggalKonfirmasi.getSelectedItem()+""),
            TanggalKonfirmasi.getSelectedItem().toString().substring(11,19),
            TNoKartu.getText(),
            TNoSep.getText(),
            KdDokter.getText(),
            TxPetugasBpjs.getText(),
            DiagnosaUtama.getText(),
            AlasanDiagnosaUtama.getText(),
            DiagnosaUtama1.getText(),
            AlasanDiagnosaUtama1.getText(),
            DiagnosaUtama2.getText(),
            AlasanDiagnosaUtama2.getText(),
            DiagnosaUtama3.getText(),
            AlasanDiagnosaUtama3.getText(),
            DiagnosaUtama4.getText(),
            AlasanDiagnosaUtama4.getText(),
            TxProsedurUtama.getText(),
            TxProsedur1.getText(),
            TxProsedur2.getText(),
            TxProsedur3.getText(),
            Status.getSelectedItem().toString()
         })==true){
             tabMode.addRow(new String[]{
                TNoRw.getText(),TNoRM.getText(),TPasien.getText(),
                TNoKartu.getText(),
                TNoSep.getText(),
                Valid.SetTgl(TanggalKonfirmasi.getSelectedItem()+""),
                TanggalKonfirmasi.getSelectedItem().toString().substring(11,19),
                KdDokter.getText(),
                NmDokter.getText(),
                TxPetugasBpjs.getText(),
                DiagnosaUtama.getText(),
                AlasanDiagnosaUtama.getText(),
                DiagnosaUtama1.getText(),
                AlasanDiagnosaUtama1.getText(),
                DiagnosaUtama2.getText(),
                AlasanDiagnosaUtama2.getText(),
                DiagnosaUtama3.getText(),
                AlasanDiagnosaUtama3.getText(),
                DiagnosaUtama4.getText(),
                AlasanDiagnosaUtama4.getText(),
                TxProsedurUtama.getText(),
                TxProsedur1.getText(),
                TxProsedur2.getText(),
                TxProsedur3.getText(),
                Status.getSelectedItem().toString()
             });
             emptTeks();
             LCount.setText(""+tabMode.getRowCount());
         } 
    }
}
